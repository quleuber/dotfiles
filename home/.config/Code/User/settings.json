{
  "window.restoreWindows": "none",
  // Workbench
  "workbench.startupEditor": "newUntitledFile",
  "workbench.sideBar.location": "right",
  "workbench.iconTheme": "material-icon-theme",
  // Editor
  "editor.rulers": [80],
  "editor.tabSize": 2,
  "editor.inlineSuggest.enabled": true,
  "editor.acceptSuggestionOnEnter": "off",
  "editor.minimap.enabled": false,
  "editor.inlayHints.enabled": "offUnlessPressed",
  "editor.renderWhitespace": "trailing",
  // Diff Editor
  "diffEditor.ignoreTrimWhitespace": false,
  // Theme
  "workbench.colorTheme": "monokai-charcoal (red)",
  "gitlens.currentLine.enabled": false,
  "gitlens.hovers.currentLine.over": "line",
  "gitlens.codeLens.enabled": false,
  // Font
  "editor.fontFamily": "'IosevkaNerdFontComplete-Light', 'Iosevka', 'Fira Code', Inconsolata-g, monospace",
  "editor.fontSize": 16,
  "editor.fontLigatures": true,
  // Zen Mode
  "zenMode.fullScreen": false,
  "zenMode.hideLineNumbers": false,
  "problems.showCurrentInStatus": true,
  "terminal.external.linuxExec": "kitty",
  "terminal.external.osxExec": "kitty.app",
  "terminal.integrated.fontFamily": "Inconsolata, monospace",
  "terminal.integrated.tabs.enabled": false,
  // Python
  "python.analysis.typeCheckingMode": "strict",
  "python.formatting.provider": "black",
  "python.formatting.autopep8Path": "black",
  // Auto-complete
  "tabnine.experimentalAutoImports": true,
  // Screencast Mode
  "screencastMode.verticalOffset": 2,
  "screencastMode.fontSize": 32,
  // bah
  // "workbench.editor.untitled.hint": "hidden",
  "editor.accessibilitySupport": "off",
  "redhat.telemetry.enabled": false,
  // Spelling
  "cSpell.language": "en,pt-BR",
  "cSpell.ignoreWords": ["quleuber", "stricts", "usermod"],
  "cSpell.userWords": [
    "addrs",
    "allocs",
    "arit",
    "arities",
    "arity",
    "ascii",
    "bytecode",
    "camelcase",
    "concat",
    "configfile",
    "Couldn",
    "curr",
    "deserializable",
    "deserialization",
    "dotfiles",
    "dtach",
    "elems",
    "erasedness",
    "forall",
    "funcs",
    "hasher",
    "hashrate",
    "incentivized",
    "Iosevka",
    "keccak",
    "kindelia",
    "Kindelia",
    "mergeable",
    "Nakamoto",
    "newtype",
    "nonblocking",
    "oper",
    "quleuber",
    "redex",
    "redexes",
    "retr",
    "roadmap",
    "serde",
    "Serializers",
    "singlepass",
    "stringification",
    "stringifier",
    "struct",
    "succ",
    "traefik",
    "tupl",
    "typecheck",
    "typeclass",
    "upsert",
    "upserted",
    "uuid",
    "uuids",
    "vals",
    "wouldn"
  ],
  // `TODO`
  "todo-tree.general.tags": [
    "BUG",
    "HACK",
    "FIXME",
    "TODO",
    "XXX",
    "[ ]",
    "[x]"
  ],
  "todo-tree.regex.regex": "(//|#|<!--|;|/\\*|^|^\\s*(-|\\d+.))\\s*($TAGS)",
  // File associations
  "files.associations": {
    "*.tf": "tf",
    "*.yml": "yaml",
    "*.hvm": "hvm"
  },
  // Vim mode
  "vim.easymotion": true,
  "vim.useSystemClipboard": true,
  "vim.normalModeKeyBindingsNonRecursive": [
    {
      "before": ["<space>"],
      "commands": ["vspacecode.space"]
    },
    {
      "before": [","],
      "commands": [
        "vspacecode.space",
        {
          "command": "whichkey.triggerKey",
          "args": "m"
        }
      ]
    }
  ],
  "vim.visualModeKeyBindingsNonRecursive": [
    {
      "before": ["<space>"],
      "commands": ["vspacecode.space"]
    },
    {
      "before": [","],
      "commands": [
        "vspacecode.space",
        {
          "command": "whichkey.triggerKey",
          "args": "m"
        }
      ]
    }
  ],
  "vspacecode.bindingOverrides": [
    {
      "keys": "k",
      "name": "Kelvin's custom stuff",
      "type": "bindings",
      "bindings": [
        {
          "key": "n",
          "name": "Add cursor selection to next match",
          "type": "command",
          "command": "editor.action.addSelectionToNextFindMatch"
        },
        {
          "key": "u",
          "name": "Cursor undo",
          "type": "command",
          "command": "cursorUndo"
        }
      ]
    }
  ],
  // Copilot
  "github.copilot.enable": {
    "*": true,
    "yaml": true,
    "plaintext": true,
    "markdown": true
  },
  // lang: JSONC
  "[jsonc]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  // lang: Yaml
  "[yaml]": {
    "editor.defaultFormatter": "redhat.vscode-yaml"
  },
  // lang: Markdown
  // "markdown-preview-github-styles.colorTheme": "light",
  "[markdown]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  // lang: Javascript
  "[javascript]": {
    "editor.defaultFormatter": "vscode.typescript-language-features"
  },
  "[typescript]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[typescriptreact]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  // lang: Rust
  "rust-analyzer.checkOnSave.command": "clippy",
  "[rust]": {
    "editor.defaultFormatter": "rust-lang.rust-analyzer"
  },
  "rust-analyzer.lens.implementations.enable": false,
  "//": null
}
