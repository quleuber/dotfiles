{
  "update.mode": "manual",
  // Based
  "git.defaultBranchName": "master",
  // Window
  "window.restoreWindows": "none",
  "window.menuBarVisibility": "toggle",
  "window.customTitleBarVisibility": "auto",
  "window.dialogStyle": "custom",
  // Workbench
  "workbench.startupEditor": "newUntitledFile",
  "workbench.sideBar.location": "right",
  "workbench.activityBar.location": "bottom",
  // Editor
  "editor.rulers": [80],
  "editor.tabSize": 2,
  "editor.inlineSuggest.enabled": true,
  "editor.acceptSuggestionOnEnter": "off",
  "editor.minimap.enabled": false,
  "editor.inlayHints.enabled": "offUnlessPressed",
  "editor.renderWhitespace": "trailing",
  "editor.formatOnSave": true,
  "editor.autoClosingBrackets": "never",
  // Diff Editor
  "diffEditor.ignoreTrimWhitespace": false,
  "workbench.colorTheme": "monokai-charcoal (red)",
  // "workbench.preferredDarkColorTheme": "Monokai Pro (Filter Ristretto)",
  "workbench.preferredDarkColorTheme": "monokai-charcoal (red)",
  "workbench.preferredLightColorTheme": "GitHub Light Default",
  "workbench.iconTheme": "material-icon-theme",
  "gitlens.currentLine.enabled": false,
  "gitlens.hovers.currentLine.over": "line",
  "gitlens.codeLens.enabled": false,
  // Font
  "editor.fontFamily": "Iosevka Comfy, Iosevka, Fira Code, monospace, monospace",
  "editor.fontWeight": "300",
  "editor.fontSize": 14,
  "editor.fontLigatures": true, // --> != <==
  // Zen Mode
  "zenMode.fullScreen": false,
  "zenMode.hideLineNumbers": false,
  "problems.showCurrentInStatus": true,
  "terminal.external.linuxExec": "alacritty",
  "terminal.external.osxExec": "kitty.app",
  "terminal.integrated.fontFamily": "Inconsolata, monospace",
  "terminal.integrated.tabs.enabled": false,
  // Python
  "python.analysis.typeCheckingMode": "strict",
  // Live Share
  "liveshare.allowGuestDebugControl": true,
  "liveshare.allowGuestTaskControl": true,
  "liveshare.languages.allowGuestCommandControl": true,
  // Screencast Mode
  "screencastMode.verticalOffset": 2,
  "screencastMode.fontSize": 32,
  "editor.accessibilitySupport": "off",
  "redhat.telemetry.enabled": false,
  // Spelling
  "cSpell.language": "en,pt-BR",
  "cSpell.userWords": [
    "alacritty",
    "ascii",
    "bytecode",
    "camelcase",
    "clippy",
    "concat",
    "deserializable",
    "deserialization",
    "direnv",
    "dotfiles",
    "dtach",
    "elems",
    "forall",
    "hasher",
    "hashrate",
    "homoiconicity",
    "incentivized",
    "Inconsolata",
    "Iosevka",
    "keccak",
    "kindelia",
    "Kindelia",
    "lmao",
    "mergeable",
    "Nakamoto",
    "newtype",
    "nonblocking",
    "redex",
    "redexes",
    "roadmap",
    "screencast",
    "serde",
    "singlepass",
    "stringification",
    "stringifier",
    "struct",
    "typecheck",
    "typeclass",
    "upsert",
    "upserted",
    "uuid",
    "uuids",
    "vals",
    "venv"
  ],
  // File associations
  "files.associations": {
    "*.tf": "tf",
    "*.yml": "yaml",
    "*.hvm": "hvm"
  },
  "vim.easymotion": true,
  "vim.useSystemClipboard": true,
  "vim.normalModeKeyBindingsNonRecursive": [
    {
      "before": ["<space>"],
      "commands": ["vspacecode.space"]
    },
    {
      "before": [","],
      "commands": [
        "vspacecode.space",
        {
          "command": "whichkey.triggerKey",
          "args": "m"
        }
      ]
    }
  ],
  "vim.visualModeKeyBindingsNonRecursive": [
    {
      "before": ["<space>"],
      "commands": ["vspacecode.space"]
    },
    {
      "before": [","],
      "commands": [
        "vspacecode.space",
        {
          "command": "whichkey.triggerKey",
          "args": "m"
        }
      ]
    }
  ],
  "vspacecode.bindingOverrides": [
    {
      "keys": "k",
      "name": "Kelvin's custom stuff",
      "type": "bindings",
      "bindings": [
        {
          "key": "n",
          "name": "Add cursor selection to next match",
          "type": "command",
          "command": "editor.action.addSelectionToNextFindMatch"
        },
        {
          "key": "u",
          "name": "Cursor undo",
          "type": "command",
          "command": "cursorUndo"
        },
        {
          "key": "f",
          "name": "Quick find file",
          "type": "command",
          "command": "workbench.action.quickOpen"
        },
        {
          "key": "c",
          "name": "Comment",
          "type": "command",
          "command": "editor.action.commentLine"
        }
      ]
    }
  ],
  // lang: JSON
  "[json]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[jsonc]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  // lang: Yaml
  "[yaml]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  // lang: Markdown
  // "markdown-preview-github-styles.colorTheme": "light",
  "[markdown]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  // lang: Javascript / Web
  "[javascript]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[typescript]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[typescriptreact]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[html]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  // lang: Rust
  "rust-analyzer.checkOnSave.command": "clippy",
  "[rust]": {
    "editor.defaultFormatter": "rust-lang.rust-analyzer"
  },
  "rust-analyzer.lens.implementations.enable": false,
  "//": null,
  "github.copilot.enable": {
    "*": false,
    "plaintext": false,
    "markdown": false,
    "scminput": false
  }
}
